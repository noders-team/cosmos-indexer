syntax = "proto3";

option go_package = "/blocks";

package blocks;

import "google/protobuf/timestamp.proto";

service BlocksService {
  rpc BlockInfo(GetBlockInfoRequest) returns (GetBlockInfoResponse) {}
  rpc BlockInfoByHash(BlockInfoByHashRequest) returns (BlockInfoByHashResponse) {}
  rpc BlockValidators(GetBlockValidatorsRequest) returns (GetBlockValidatorsResponse) {}
  rpc TxChartByDay(TxChartByDayRequest) returns (TxChartByDayResponse) {}
  rpc TxByHash(TxByHashRequest) returns (TxByHashResponse) {}
  rpc TotalTransactions(TotalTransactionsRequest) returns (TotalTransactionsResponse) {}
  rpc Transactions(TransactionsRequest) returns (TransactionsResponse) {}
  rpc TotalBlocks(TotalBlocksRequest) returns (TotalBlocksResponse) {}
  rpc GetBlocks(GetBlocksRequest) returns (GetBlocksResponse) {}
  rpc BlockSignatures(BlockSignaturesRequest) returns (BlockSignaturesResponse) {}
  rpc TxsByBlock(TxsByBlockRequest) returns (TxsByBlockResponse) {}
  rpc TransactionRawLog(TransactionRawLogRequest) returns (TransactionRawLogResponse) {}
  rpc TransactionSigners(TransactionSignersRequest) returns (TransactionSignersResponse) {}
  rpc CacheTransactions(TransactionsRequest) returns (TransactionsResponse) {}
  rpc CacheGetBlocks(GetBlocksRequest) returns (GetBlocksResponse) {}
  rpc CacheAggregated(CacheAggregatedRequest) returns (CacheAggregatedResponse) {}
  rpc SearchHashByText(SearchHashByTextRequest) returns (SearchHashByTextResponse) {}
  rpc ChartTransactionsByHour(ChartTransactionsByHourRequest) returns (ChartTransactionsByHourResponse) {}
  rpc ChartTransactionsVolume(ChartTransactionsVolumeRequest) returns (ChartTransactionsVolumeResponse) {}
  rpc BlockUpTime(BlockUpTimeRequest) returns (BlockUpTimeResponse) {}
  rpc UptimeByBlocks(UptimeByBlocksRequest) returns (UptimeByBlocksResponse) {}
  rpc GetVotes(GetVotesRequest) returns (GetVotesResponse) {}
  rpc GetPowerEvents(GetPowerEventsRequest) returns (GetPowerEventsResponse) {}
  rpc GetValidatorHistoryEvents(GetValidatorHistoryEventsRequest) returns (GetValidatorHistoryEventsResponse) {}
  rpc TransactionsByEventValue(TransactionsByEventValueRequest) returns (TransactionsByEventValueResponse) {}
  rpc GetVotesByAccounts(GetVotesByAccountsRequest) returns (GetVotesByAccountsResponse) {}
  rpc GetWalletsCountPerPeriod(GetWalletsCountPerPeriodRequest) returns (GetWalletsCountPerPeriodResponse) {}
  rpc GetWalletsWithTx(GetWalletsWithTxRequest) returns (GetWalletsWithTxResponse) {}
  rpc TxCountByAccounts(TxCountByAccountsRequest) returns (TxCountByAccountsResponse) {}
  rpc AccountInfo(AccountInfoRequest) returns (AccountInfoResponse) {}
  rpc DelegatesByValidator(DelegatesByValidatorRequest) returns (DelegatesByValidatorResponse) {}
  rpc ProposalDepositors(ProposalDepositorsRequest) returns (ProposalDepositorsResponse) {}
  rpc RewardByAccount(RewardByAccountRequest) returns (RewardByAccountResponse) {}
}


message Block {
  int64 block_height = 1;
  string proposed_validator = 2;
  google.protobuf.Timestamp generation_time = 3;
  string total_fees = 4;
  string tx_hash=5;
  int64 total_tx = 6;
  string gas_used  = 7;
  string gas_wanted  = 8;
  string block_rewards = 9;
}

message GetBlockInfoRequest {
  int32 block_number = 1;
  int32 chain_id = 2;
}

message GetBlockInfoResponse {
  int32 block_number = 1;
  int32 chain_id = 2;
  Block info = 3;
}

message GetBlockValidatorsRequest {
  int32 block_number = 1;
  int32 chain_id = 2;
}

message GetBlockValidatorsResponse {
  int32 block_number = 1;
  int32 chain_id = 2;
  repeated string validators_list = 3;
}

message TxByDay{
  int32 tx_num = 1;
  google.protobuf.Timestamp day = 2;
}

message TxChartByDayRequest {
  google.protobuf.Timestamp from = 1;
  google.protobuf.Timestamp to = 2;
}

message TxChartByDayResponse {
  repeated TxByDay tx_by_day = 1;
}

message TxByHashRequest {
  string hash = 1;
}

message TxByHashResponse {
  TxByHash tx = 1;
}

message TxByHash {
  repeated string messages = 1;
  string memo = 2;
  string timeout_height = 3;
  repeated string extension_options = 4;
  repeated string non_critical_extension_options = 5;
  TxAuthInfo auth_info = 6;
  TxResponse tx_response = 7;
  Block block = 8;
  repeated Fee fees = 9;
  optional TxSenderReceiver sender_receiver = 10;
  repeated TxEvent events = 11;
}

message TxSenderReceiver {
  string message_type = 1;
  string sender = 2;
  string receiver = 3;
  string amount = 4;
  string denom = 5;
}

message TxEvent {
  string message_type = 1;
  int32 event_index = 2;
  string type = 3;
  int32 index = 4;
  string value = 5;
  string key = 6;
}

message Fee {
  string amount=1;
  string denom=2;
  string payer=3;
}

message TxAuthInfo {
  repeated string public_key = 1;
  TxFee fee = 2;
  repeated bytes signatures = 3;
  TxTip tip = 4;
  repeated SignerInfo signer_infos = 5;
}

message SignerInfo {
  string address = 1;
  string mode_info = 2;
  int64 sequence = 3;
}

message TxFee {
  repeated Denom amount = 1;
  string gas_limit = 2;
  string payer = 3;
  string granter = 4;
}

message TxTip {
  repeated Denom amount = 1;
  string tipper = 2;
}

message TxResponse {
  string height = 1;
  string txhash = 2;
  string codespace = 3;
  int32 code = 4;
  string data = 5;
  string raw_log = 6;
  repeated TxLog logs = 7;
  string info = 8;
  string gas_wanted = 9;
  string gas_used = 10;
  string timestamp = 11;
}

message TxLog {
  int32 msg_index = 1;
  string log = 2;
}

message Denom {
  string denom = 1;
  string amount = 2;
}

message TotalTransactionsRequest {
  google.protobuf.Timestamp to = 1;
}

message TotalTransactionsResponse {
  string total = 1;
  string total24h = 2;
  string total30d = 3;
  string volume24h = 4;
  string volume30d = 5;
  string total48h = 6;
}

message Limit {
  int64 limit = 1;
  int64 offset = 2;
}

message Result {
  int64 limit = 1;
  int64 offset = 2;
  int64 all = 3;
}

message TransactionsRequest {
    Limit limit = 1;
}

message TransactionsResponse {
  repeated TxByHash tx = 1;
  Result result = 2;
}

message TotalBlocksRequest{
  google.protobuf.Timestamp to = 1;
}

message TotalBlocksResponse {
  int64 height = 1;
  int64 count24H = 2;
  int64 time = 3;
  string totalFee24H = 4;
  int64 count48H = 5;
}

message GetBlocksRequest{
  Limit limit = 1;
}

message GetBlocksResponse{
  repeated Block blocks = 1;
  Result result = 2;
}

message BlockSignaturesRequest {
  int64 blockHeight = 1;
  Limit limit = 2;
  repeated string val_address = 3;
}

message BlockSignaturesResponse {
  repeated SignerAddress signers = 1;
  Result result = 2;
}

message SignerAddress {
  string address = 1;
  google.protobuf.Timestamp time = 2;
  int64 rank = 3;
}

message TxsByBlockRequest{
  int64 blockHeight = 1;
  Limit limit = 2;
}

message TxsByBlockResponse{
  repeated TxByHash data = 1;
  Result result = 2;
}


message TransactionRawLogRequest{
  string tx_hash = 1;
}

message TransactionRawLogResponse{
  bytes raw_log = 1;
}

message TransactionSignersRequest{
  string tx_hash = 1;
}

message TransactionSignersResponse{
  repeated SignerInfo signers = 1;
}

message CacheAggregatedRequest{
}

message CacheAggregatedResponse{
    TotalTransactionsResponse transactions = 1;
    TotalBlocksResponse blocks = 2;
    TotalWallets wallets = 3;
}

message TotalWallets {
  int64 total = 1;
  int64 count_24H = 2;
  int64 count_48H = 3;
  int64 count_30D = 4;
}

message SearchResults {
  string hash = 1;
  string hash_type = 2;
  string block_height = 3;
}

message SearchHashByTextRequest{
  string text = 1;
}

message SearchHashByTextResponse{
  repeated SearchResults results = 1;
}

message BlockInfoByHashRequest {
  string hash = 1;
}

message BlockInfoByHashResponse {
  Block info = 1;
}

message ChartTransactionsByHourRequest{
  google.protobuf.Timestamp to = 1;
}

message TxsByHour {
  int64 tx_num = 1;
  google.protobuf.Timestamp hour = 2;
}

message ChartTransactionsByHourResponse{
  repeated TxsByHour points = 1;
  int64 total_24H = 2;
  int64 total_48H = 3;
}

message ChartTransactionsVolumeRequest{
  google.protobuf.Timestamp to = 1;
}

message TxsVolumeByHour {
  string tx_volume = 1;
  google.protobuf.Timestamp hour = 2;
}

message ChartTransactionsVolumeResponse{
  repeated TxsVolumeByHour points = 1;
}

message BlockUpTimeRequest{
  int64 block_window = 1;
  int64 block_height = 2;
  string validator_address = 3;
}

message BlockUpTimeResponse {
  string uptime = 1;
}

message UptimeByBlocksRequest {
  int64 block_window = 1;
  int64 block_height = 2;
  string validator_address = 3;
}

message BlockSigned {
  int64 block_height = 1;
  bool signed = 2;
}

message UptimeByBlocksResponse{
  repeated BlockSigned blocks = 1;
  float uptime = 2;
}

message VotesTransaction{
  int64 block_height = 1;
  google.protobuf.Timestamp time = 2;
  string tx_hash = 3;
  int32 proposal_id = 4;
  string voter = 5;
  string option = 6;
  string weight = 7;
}

message GetVotesRequest{
  string validator_account_address = 1;
  Limit limit = 2;
}

message GetVotesResponse{
  repeated VotesTransaction transactions = 1;
  Result result = 2;
}

message GetPowerEventsRequest {
  string validator_account_address = 1;
  Limit limit = 2;
}

message GetPowerEventsResponse{
  repeated TxByHash data = 1;
  Result result = 2;
}

message GetValidatorHistoryEventsRequest {
  string validator_account_address = 1;
  Limit limit = 2;
}

message GetValidatorHistoryEventsResponse{
  repeated TxByHash data = 1;
  Result result = 2;
}

message TransactionsByEventValueRequest{
  repeated string values = 1;
  repeated string type = 2;
  Limit limit = 3;
}

message TransactionsByEventValueResponse{
  repeated TxByHash data = 1;
  Result result = 2;
}

message GetVotesByAccountsRequest{
  repeated string accounts = 1;
  bool exclude = 2;
  string vote_type = 3;
  int32 proposalID = 4;
  Limit limit = 5;
  optional string account_addr = 6;
  optional SortBy sort = 7;
}

message GetVotesByAccountsResponse{
  repeated VotesTransaction data = 1;
  Result result = 2;
}

message GetWalletsCountPerPeriodRequest{
  google.protobuf.Timestamp start = 1;
  google.protobuf.Timestamp end = 2;
}

message GetWalletsCountPerPeriodResponse{
  int64 result = 1;
}

message GetWalletsWithTxRequest{
  Limit limit = 1;
}

message GetWalletsWithTxResponse{
  repeated WalletWithTxs data = 1;
  Result result = 2;
}

message WalletWithTxs{
  string account = 1;
  int64 tx_count = 2;
}

message TxCountByAccountsRequest{
  repeated string accounts = 1;
}

message TxCountByAccountsResponse{
  repeated WalletWithTxs data = 1;
}

message AccountInfoRequest{
  string account = 1;
}

message AccountInfoResponse{
  int64 tx_count = 1;
  google.protobuf.Timestamp first_tx_time = 2;
  Denom total_spent = 3;
  Denom total_received = 4;
}

message DelegatesByValidatorRequest{
  google.protobuf.Timestamp from = 1;
  google.protobuf.Timestamp to = 2;
  string valoperAddress = 3;
  Limit limit = 4;
}

message DelegatesByValidatorResponse{
  Denom totalSum = 1;
  repeated TxByHash tx = 2;
  Result result = 3;
}

message SortBy{
  string sort_by = 1;
  string direction = 2;
}

message ProposalDeposit {
  string tx_hash=1;
  google.protobuf.Timestamp time = 2;
  Denom amount = 3;
  string address = 4;
}

message ProposalDepositorsRequest{
  int32 proposal_id = 1;
  Limit limit = 2;
  optional SortBy sort = 3;
}

message ProposalDepositorsResponse{
  repeated ProposalDeposit data=1;
  Result result = 2;
}

message RewardByAccountRequest{
  string account = 1;
}

message RewardByAccountResponse{
  repeated Denom amount = 1;
}